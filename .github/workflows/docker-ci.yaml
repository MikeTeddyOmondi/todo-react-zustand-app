name: Docker CI/CD

on:
  push:
    branches: [master, "feature/*"]
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]

jobs:
  test_format_and_lint:
    name: Test, Format and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test

      - name: Build app
        run: npm run build

  build_and_push_staging:
    name: Build and Push Docker Image (Staging)
    needs: test_format_and_lint
    if: startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/vite-app
          tags: |
            type=ref,event=branch
            type=sha,prefix=staging-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vite-react-app:buildcache-staging
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vite-react-app:buildcache-staging,mode=max
          build-args: |
            VITE_ENV=staging

      - name: Image Summary
        run: |
          echo "### 🐳 Staging Docker Image Built" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "Docker Image: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

  build_and_push_production:
    name: Build and Push Docker Image (Production)
    needs: test_format_and_lint
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/vite-app
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vite-react-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/vite-react-app:buildcache,mode=max
          build-args: |
            VITE_ENV=production

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Image Summary
        run: |
          echo "### 🎉 Production Docker Image Built" >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "Docker Image: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
